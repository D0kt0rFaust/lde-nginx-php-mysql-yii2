version: '3.9'

x-app-args: &app-args
  - USER=${USER}
  - UID=${UID}

#x-app-logging: &app-logging
#  driver: "json-file"
#  options:
#    max-size: "12Mb"
#    max-file: "1"

volumes:
  mysql-data:
  elastic-data:
  # mongo-data:
  # rabbitmq-data:

networks:
 default:
   driver: bridge
   ipam:
     config:
       - subnet: 11.14.0.0/16
 traefik-net:
   name: traefik_net
   external: true

services:

  # Php-приложение
  app-back:
    build:
      context: .
      dockerfile: ./images/php/Dockerfile
      args: *app-args
    depends_on:
      - mysql
      - elasticsearch
    volumes:
      - ${LOCAL_CODE_PATH_BACK}:/var/www
    networks:
      - default
      - traefik-net

  # Веб-сервер для php-приложения
  nginx:
    image: nginx:latest
    volumes:
      - ./etc/nginx/:/etc/nginx/conf.d/
      - ${LOCAL_CODE_PATH_BACK}:/var/www
    depends_on:
      - app-back
    networks:
      - default
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.routers.nginx.rule=Host(`${LOCAL_HOSTNAME_BACK}`)"
      - "traefik.docker.network=traefik_net"
      # - "traefik.http.routers.nginx.middlewares.compress=true"
      # - "traefik.http.routers.nginx.middlewares=app-back"
      # - "traefik.http.middlewares.app-back.headers.accessControlAllowHeaders=authorization,x-experience-api-version,content-type,cache-control,x-requested-with,origin,X-CSRF-Token"
  
  # Cron-like utils
  # scheduler:
  #   image: funkyfuture/deck-chores:1
  #   # logging: *app-logging
  #   environment:
  #     TIMEZONE: Europe/Moscow
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock

  ### Sidecar services

  # Движок для полнотекстового поиска
  elasticsearch:
    image: elastic/elasticsearch:7.17.12
    environment:
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
      ELASTICSEARCH_USERNAME: "${LOCAL_ELASTIC_USERNAME}"
      ELASTICSEARCH_PASSWORD: "${LOCAL_ELASTIC_PASSWORD}"
      discovery.type: "single-node"
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "false"
      xpack.security.http.ssl.enabled: "false"
      xpack.monitoring.collection.enabled: "true"
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535

  # Простейший SMTP-мейлер с интерфейсом
  # mailhog:
  #   image: mailhog/mailhog
  #   # logging: *app-logging
  #   networks:
  #     - default
  #     - traefik-net
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=traefik_net"
  #     - "traefik.http.routers.mailhog.entrypoints=web"
  #     - "traefik.http.routers.mailhog.rule=Host(`${LOCAL_HOSTNAME_MAILHOG}`)"
  #     - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

  # mongo-db:
  #   image: mongo:6.0
  #   ports:
  #     - ${LOCAL_FORWARD_MONGO_DB_PORT}:27017
  #   volumes:
  #     - mongo-db-data:/data/db
  #   ulimits:
  #     nproc: 65535
  #     nofile:
  #       soft: 65535
  #       hard: 65535

  # Основная БД
  mysql:
    image: mysql:8.0
    ports:
      - ${LOCAL_MYSQL_FORWARD_DB_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${LOCAL_MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-p${LOCAL_MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 20
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init/mysql/:/docker-entrypoint-initdb.d/
      - ./etc/mysql/:/etc/mysql/conf.d/
    command: mysqld --sql_mode="ONLY_FULL_GROUP_BY,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
    networks:
      - default
    labels:
      traefik.enable: false

  # Интерфейс для управления основной БД
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.1.3
    # logging: *app-logging
    environment:
      - TZ=Europe/Moscow
      - PMA_HOSTS=mysql
      - PMA_PORT=3306
      - PMA_ABSOLUTE_URI=http://${LOCAL_HOSTNAME_PMA}
    networks:
      - default
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.phpmyadmin.entrypoints=web"
      - "traefik.http.routers.phpmyadmin.rule=Host(`${LOCAL_HOSTNAME_PMA}`)"

  # rabbitmq:
  #   image: rabbitmq:3.10-management
  #   healthcheck:
  #     test: rabbitmq-diagnostics -q ping
  #     interval: 30s
  #     timeout: 30s
  #     retries: 3
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq/mnesia/rabbit@learninglocker-rabbitmq:cached
  #   environment:
  #     - TZ=Europe/Moscow
  #     # - RABBITMQ_DEFAULT_USER=local
  #     # - RABBITMQ_DEFAULT_PASS=local
  #     # - RABBITMQ_DEFAULT_VHOST=/local

  # Кэширующая БД
  # redis:
  #   image: redis:7-alpine

  # Балансир
  traefik:
    image: traefik:2.10.4
    # logging: *app-logging
    container_name: traefik
    # restart: always
    command:
      - --log.level=ERROR
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      traefik-net:
        aliases:
          - ${LOCAL_HOSTNAME_BACK}
          # - ${LOCAL_HOSTNAME_FRONT}
      default:
        aliases:
          - ${LOCAL_HOSTNAME_BACK}
          # - ${LOCAL_HOSTNAME_FRONT}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.rule=Host(`${LOCAL_HOSTNAME_TRAEFIK}`)"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
